syntax = "proto3";

package v1;

option go_package = "/consensus/ibft/proto";

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

service Ibft {
    rpc Handshake(google.protobuf.Empty) returns (HandshakeResp);
    rpc Message(MessageReq) returns (google.protobuf.Empty);
}

message HandshakeResp {
    string key = 1;
}

message MessageReq {
    // type is the type of the message
    Type type = 1;

    // from is the address of the sender
    string from = 2;

    // seal is the committed seal if message is commit
    string seal = 3;

    // signature is the crypto signature of the message
    string signature = 4;

    // view is the view assigned to the message
    View view = 5;

    // deprecated. hash of the locked block
    string digest = 6;

    // proposal is the rlp encoded block in preprepare messages
    google.protobuf.Any proposal = 7;

    // canonical is the canonical seal from proposer, who should be the only one to seal
    CanonicalSeal canonical = 8;

    enum Type {
        Preprepare = 0;
        Prepare = 1;
        Commit = 2;
        RoundChange = 3;
        PostCommit = 4;
    }
}

message View {
    uint64 round = 1;
    uint64 sequence = 2;
}

message CanonicalSeal {
    // block hash before sealed
    string hash = 1;
    // enough seals collected by proposer
    repeated string seals = 2;
}