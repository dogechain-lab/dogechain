run:
  timeout: 3m
  tests: true
  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

service:
  golangci-lint-version: 1.51.2

linters:
  # default false
  disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default-linters
  enable:
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, , , _, := f())
    - dupl # Code clone detection
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
    - errorlint # errorlint is a linter for that can be used to find code that will cause problems with the error wrapping scheme introduced in Go 1.13
    - forcetypeassert # Finds forced type assertions
    - goconst # Repeated strings that could be replaced by a constant
    - gofmt # Whether the code was gofmt-ed
    - goimports # Unused imports
    - gosec # Security problems
    - importas # Enforces consistent import aliases
    - lll # Long lines
    - makezero # Finds slice declarations with non-zero initial length
    - misspell # Misspelled English words in comments
    - nlreturn # Checks for a new line before return and branch statements to increase code clarity
    - nolintlint # Ill-formed or insufficient nolint directives
    - prealloc # Finds slice declarations that could
    - predeclared #  Finds code that shadows one of Go's predeclared identifiers
    - stylecheck # Stylecheck is a replacement for golint
    - thelper # Detects golang test helpers without t.Helper() call and checks the consistency of test helpers
    - tparallel # Detects inappropriate usage of t.Parallel() method in your Go test codes
    - unconvert # Unnecessary type conversions
    - wastedassign # Finds wasted assignment statements
    - whitespace # Tool for detection of leading and trailing whitespace
    - wsl # Forces you to use empty lines

linters-settings:
  gofmt:
    simplify: true
  goconst:
    min-len: 3
    min-occurrences: 3

issues:
  # new-from-rev: origin/dev # report only new issues with reference to dev branch
  exclude-rules:
    - path: _test\.go
      linters:
        - gosec
        - unparam
        - lll
    - linters:
        - staticcheck
      path: "state/runtime/precompiled/base.go"
      text: "SA1019:"
  include:
    - EXC0012 # Exported (.+) should have comment( \(or a comment on this block\))? or be unexported
    - EXC0013 # Package comment should be of the form "(.+)...
    - EXC0014 # Comment on exported (.+) should be of the form "(.+)..."
    - EXC0015 # Should have a package comment
