package vault

import (
	"math/big"

	"github.com/dogechain-lab/jury/chain"
	"github.com/dogechain-lab/jury/helper/hex"
	"github.com/dogechain-lab/jury/types"
)

// getStorageIndexes is a helper function for getting the correct indexes
// of the storage slots which need to be modified during bootstrap.
//
// It is SC dependant, and based on the SC located at:
// https://github.com/dogechain-lab/jury-contracts
func getStorageIndexes() *StorageIndexes {
	storageIndexes := StorageIndexes{}

	// Get the indexes for _owner, _minimumThreshold
	// Index for regular types is calculated as just the regular slot
	storageIndexes.OwnerIndex = big.NewInt(ownerSlot).Bytes()

	return &storageIndexes
}

// PredeployParams contains the values used to predeploy the Vault contract
type PredeployParams struct {
	Owner types.Address
}

// StorageIndexes is a wrapper for different storage indexes that
// need to be modified
type StorageIndexes struct {
	OwnerIndex []byte // address
}

// Slot definitions for SC storage
const (
	ownerSlot = int64(iota) // Slot 0
)

const (
	//nolint: lll
	VaultSCBytecode = "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063ca1e781911610071578063ca1e78191461025a578063d0a5e6ce14610278578063f2fde38b14610294578063f90ecacc146102b0578063facd743b146102e05761010b565b8063715018a6146101fa5780638da5cb5b14610204578063960bfe0414610222578063a694fc3a1461023e5761010b565b80633209e9e6116100de5780633209e9e614610184578063373d6132146101a057806342cde4e8146101be57806352d6804d146101dc5761010b565b80630c340a24146101105780631327d3d81461012e5780632367f6b51461014a5780632def66201461017a575b600080fd5b610118610310565b60405161012591906116d8565b60405180910390f35b61014860048036038101906101439190611487565b61033a565b005b610164600480360381019061015f9190611487565b6105fd565b6040516101719190611890565b60405180910390f35b610182610646565b005b61019e600480360381019061019991906114e1565b610928565b005b6101a86109c0565b6040516101b59190611890565b60405180910390f35b6101c66109ca565b6040516101d39190611890565b60405180910390f35b6101e46109d4565b6040516101f19190611890565b60405180910390f35b6102026109de565b005b61020c610a78565b60405161021991906116d8565b60405180910390f35b61023c600480360381019061023791906114e1565b610aa1565b005b610258600480360381019061025391906114e1565b610b39565b005b610262610d84565b60405161026f9190611753565b60405180910390f35b610292600480360381019061028d9190611487565b610e12565b005b6102ae60048036038101906102a99190611487565b610ee4565b005b6102ca60048036038101906102c591906114e1565b610fee565b6040516102d791906116d8565b60405180910390f35b6102fa60048036038101906102f59190611487565b61102d565b6040516103079190611775565b60405180910390f35b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906117f0565b60405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104715760025460038054905011610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90611850565b60405180910390fd5b61046c81611083565b6105fa565b600154600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611870565b60405180910390fd5b600380549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106653373ffffffffffffffffffffffffffffffffffffffff16611335565b156106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90611830565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161072c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610723906117d0565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107868160075461135890919063ffffffff16565b600781905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107e992919061172a565b602060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b91906114b4565b50600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108e157600254600380549050116108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611850565b60405180910390fd5b6108e033611083565b5b803373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f7560405160405180910390a350565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad906117f0565b60405180910390fd5b8060028190555050565b6000600754905090565b6000600154905090565b6000600254905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a63906117f0565b60405180910390fd5b610a76600061136e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b26906117f0565b60405180910390fd5b8060018190555050565b610b583373ffffffffffffffffffffffffffffffffffffffff16611335565b15610b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8f90611830565b60405180910390fd5b60008111610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd2906117b0565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c3a939291906116f3565b602060405180830381600087803b158015610c5457600080fd5b505af1158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c91906114b4565b50610cdf81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461143290919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d378160075461143290919063ffffffff16565b600781905550803373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a350565b60606003805480602002602001604051908101604052809291908181526020018280548015610e0857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dbe575b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906117f0565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f69906117f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd990611790565b60405180910390fd5b610feb8161136e565b50565b60038181548110610ffe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600380549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410611109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110090611810565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611168600160038054905061135890919063ffffffff16565b90508082146112575760006003828154811061118757611186611a25565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600384815481106111c9576111c8611a25565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560038054806112fb576112fa6119f6565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008183611366919061194b565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361144091906118f5565b905092915050565b60008135905061145781611bed565b92915050565b60008151905061146c81611c04565b92915050565b60008135905061148181611c1b565b92915050565b60006020828403121561149d5761149c611a54565b5b60006114ab84828501611448565b91505092915050565b6000602082840312156114ca576114c9611a54565b5b60006114d88482850161145d565b91505092915050565b6000602082840312156114f7576114f6611a54565b5b600061150584828501611472565b91505092915050565b600061151a8383611526565b60208301905092915050565b61152f8161197f565b82525050565b61153e8161197f565b82525050565b600061154f826118bb565b61155981856118d3565b9350611564836118ab565b8060005b8381101561159557815161157c888261150e565b9750611587836118c6565b925050600181019050611568565b5085935050505092915050565b6115ab81611991565b82525050565b60006115be6026836118e4565b91506115c982611a59565b604082019050919050565b60006115e1600e836118e4565b91506115ec82611aa8565b602082019050919050565b6000611604601d836118e4565b915061160f82611ad1565b602082019050919050565b6000611627601c836118e4565b915061163282611afa565b602082019050919050565b600061164a6012836118e4565b915061165582611b23565b602082019050919050565b600061166d601a836118e4565b915061167882611b4c565b602082019050919050565b60006116906025836118e4565b915061169b82611b75565b604082019050919050565b60006116b3601d836118e4565b91506116be82611bc4565b602082019050919050565b6116d2816119bd565b82525050565b60006020820190506116ed6000830184611535565b92915050565b60006060820190506117086000830186611535565b6117156020830185611535565b61172260408301846116c9565b949350505050565b600060408201905061173f6000830185611535565b61174c60208301846116c9565b9392505050565b6000602082019050818103600083015261176d8184611544565b905092915050565b600060208201905061178a60008301846115a2565b92915050565b600060208201905081810360008301526117a9816115b1565b9050919050565b600060208201905081810360008301526117c9816115d4565b9050919050565b600060208201905081810360008301526117e9816115f7565b9050919050565b600060208201905081810360008301526118098161161a565b9050919050565b600060208201905081810360008301526118298161163d565b9050919050565b6000602082019050818103600083015261184981611660565b9050919050565b6000602082019050818103600083015261186981611683565b9050919050565b60006020820190508181036000830152611889816116a6565b9050919050565b60006020820190506118a560008301846116c9565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611900826119bd565b915061190b836119bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119405761193f6119c7565b5b828201905092915050565b6000611956826119bd565b9150611961836119bd565b925082821015611974576119736119c7565b5b828203905092915050565b600061198a8261199d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f4f6e6c79207374616b65722063616e2063616c6c2066756e6374696f6e000000600082015250565b7f4f6e6c79206f776e65722063616e2063616c6c2066756e6374696f6e00000000600082015250565b7f696e646578206f7574206f662072616e67650000000000000000000000000000600082015250565b7f4f6e6c7920454f412063616e2063616c6c2066756e6374696f6e000000000000600082015250565b7f56616c696461746f72732063616e2774206265206c657373207468616e206d6960008201527f6e696d756d000000000000000000000000000000000000000000000000000000602082015250565b7f4163636f756e74206d757374206265207374616b656420656e6f756768000000600082015250565b611bf68161197f565b8114611c0157600080fd5b50565b611c0d81611991565b8114611c1857600080fd5b50565b611c24816119bd565b8114611c2f57600080fd5b5056fea26469706673582212205566ef576bc28015b43070838bf94566ec216b7a0583a4135e3e1ffdae4cf3be64736f6c63430008060033"
)

// PredeployVaultSC is a helper method for setting up the vault smart contract account,
// using the passed in owner and signers as pre-defined accounts.
func PredeployVaultSC(params PredeployParams) (*chain.GenesisAccount, error) {
	// Set the code for the smart contract
	// Code retrieved from https://github.com/dogechain-lab/jury-contracts
	scHex, _ := hex.DecodeHex(VaultSCBytecode)
	contractAccount := &chain.GenesisAccount{
		Code: scHex,
	}

	// Generate the empty account storage map
	storageMap := make(map[types.Hash]types.Hash)
	// Set the value for the owner
	storageIndexes := getStorageIndexes()
	storageMap[types.BytesToHash(storageIndexes.OwnerIndex)] =
		types.BytesToHash(params.Owner.Bytes())

	// Save the storage map
	contractAccount.Storage = storageMap

	return contractAccount, nil
}
