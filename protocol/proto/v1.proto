syntax = "proto3";

package v1;

option go_package = "/protocol/proto";

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

service V1 {
    // deprecated methods

    rpc GetCurrent(google.protobuf.Empty) returns (V1Status);
    rpc GetObjectsByHash(HashRequest) returns (Response);
    rpc GetHeaders(GetHeadersRequest) returns (Response);
    rpc Notify(NotifyReq) returns (google.protobuf.Empty);

    // new service for better syncing performance

    // Returns blocks from begin to end (which is determined by server)
    rpc GetBlocks(GetBlocksRequest) returns (GetBlocksResponse);
    // Returns server's status
    rpc GetStatus(google.protobuf.Empty) returns (SyncPeerStatus);
}

message GetCurrentResponse {
}

message GetHeadersRequest {
    // Provide a number or hash
    int64 number = 1;
    // Provide a number or hash
    string hash = 2;
    int64 skip = 3;
    // Provide an amount not greater than 190
    int64 amount = 4;
}

message HashRequest  {
    repeated string hash = 1;
    Type type = 2;

    enum Type {
        UNKNOWN = 0;
        BODIES = 1;
        RECEIPTS = 2;
    }
}

message NumberRequest {
    repeated int64 number = 1;
}

message Response {
    repeated Component objs = 1;

    message Component {
        google.protobuf.Any spec = 1;
    }
}

message V1Status {
    string difficulty = 1;
    string hash = 2;
    uint64 number = 3;
}

message NotifyReq {
    V1Status status = 1;
    google.protobuf.Any raw = 2;
}

// GetBlocksRequest is a request for GetBlocks
message GetBlocksRequest {
    // The height of beginning block to sync
    uint64 from = 1;
    // The height of ending block to sync
    uint64 to = 2;
}

message GetBlocksResponse {
    // The height of beginning block
    uint64 from = 1;
    // The height of ending block 
    uint64 to = 2;
    // RLP encoded block data
    repeated bytes blocks = 3;
}

// SyncPeerStatus contains peer status
message SyncPeerStatus {
  // Latest block height
  uint64 number = 1;
}